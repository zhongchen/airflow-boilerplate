version: '3.7'
#x-airflow-common: &airflow-common
#  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.0.1}
#  environment: &airflow-common-env
#    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
#    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
#    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
#    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
#    AIRFLOW__CORE__FERNET_KEY: ''
#    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
#    AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
#  volumes:
#    - ./dags:/opt/airflow/dags
#    - ./logs:/opt/airflow/logs
#    - ./plugins:/opt/airflow/plugins
#  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
#  depends_on:
#    redis:
#      condition: service_healthy
#    postgres:
#      condition: service_healthy

services:
  airflow_postgres:
    image: postgres:9.6.2
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - "airflow_dbdata:/var/lib/postgresql/data"
    ports:
      - "5432:5432"

  airflow_initdb:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    depends_on:
      - airflow_postgres
    volumes:
      - ../airflow.cfg:/usr/local/airflow/airflow.cfg
      - ../variables:/usr/local/airflow/variables
    command:
      - /bin/bash
      - -c
      - |
        airflow initdb
        if [[ -e /usr/local/airflow/variables/dev/all.json ]]; then
            airflow variables -i /usr/local/airflow/variables/dev/all.json
        fi
        # Enable this if you choose to have RBAC UI activated in the webserver
        # airflow create_user -r Admin -u airflow -e airflow@airflow.com -f Air -l Flow -p airflow

  airflow_webserver:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    depends_on:
      - airflow_initdb
    volumes:
      - ../airflow.cfg:/usr/local/airflow/airflow.cfg
      - ../dags:/usr/local/airflow/dags
      - ../plugins:/usr/local/airflow/plugins
      - ./spark-conf:/spark-conf
    ports:
      - "8080:8080"
      - "4040:4040"
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  airflow_dbdata:
